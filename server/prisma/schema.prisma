generator client {
  provider                  = "prisma-client-js"
  binaryTargets             = ["native"]
  uncheckedRelationalInputs = "true"
  uncheckedScalarInputs     = "true"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // ---------------------------------------------------
  profile   Profile?
}

model Profile {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  firstName          String
  lastName           String
  gender             GENDER
  phoneNumber        String?
  profilePhoto       String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  // ---------------------------------------------------
  userId             String               @unique @map("userId") @db.ObjectId
  user               User                 @relation(fields: [userId], references: [id])
  conversationMember ConversationMember[]
}

model Message {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  fromId         String
  messageText    String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  // ---------------------------------------------------
  conversationId String       @db.ObjectId
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

model Conversation {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  name               String?
  isGroup            Boolean              @default(false)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  // ---------------------------------------------------
  message            Message[]
  conversationMember ConversationMember[]
}

model ConversationMember {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  // ---------------------------------------------------
  profileId     String       @map("profileId") @db.ObjectId
  profile       Profile      @relation(fields: [profileId], references: [id])
  coversationId String       @map("coversationId") @db.ObjectId
  coversation   Conversation @relation(fields: [coversationId], references: [id])
}

enum GENDER {
  MALE
  FEMALE
  OTHERS
}
