generator client {
  provider                  = "prisma-client-js"
  binaryTargets             = ["native"]
  uncheckedRelationalInputs = "true"
  uncheckedScalarInputs     = "true"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // ---------------------------------------------------
  profile   Profile?

  message Message[]

  conversationIds String[]       @db.ObjectId
  conversations   Conversation[] @relation(fields: [conversationIds], references: [id])

  seenMessageIds String[]  @db.ObjectId
  seenMessages   Message[] @relation("Seen", fields: [seenMessageIds], references: [id])
}

model Profile {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName    String
  lastName     String
  gender       GENDER
  phoneNumber  String?
  profilePhoto String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  // ---------------------------------------------------
  userId       String   @unique @map("userId") @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
}

model Message {
  id             String       @id @default(auto()) @map("_id") @db.ObjectId
  messageText    String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  // ---------------------------------------------------
  conversationId String       @db.ObjectId
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  senderId String @db.ObjectId
  sender   User   @relation(fields: [senderId], references: [id])

  seenIds String[] @db.ObjectId
  seen    User[]   @relation("Seen", fields: [seenIds], references: [id])
}

model Conversation {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  isGroup       Boolean   @default(false)
  lastMessageAt DateTime  @default(now())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  // ---------------------------------------------------
  messagesIds   String[]  @db.ObjectId
  messages      Message[]

  userIds String[] @db.ObjectId
  users   User[]   @relation(fields: [userIds], references: [id])
}

enum GENDER {
  MALE
  FEMALE
  OTHERS
}
